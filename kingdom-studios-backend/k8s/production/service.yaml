# ==============================================
# KINGDOM STUDIOS BACKEND - KUBERNETES SERVICES
# Load balancing and service discovery
# ==============================================

apiVersion: v1
kind: Service
metadata:
  name: kingdom-studios-backend
  namespace: production
  labels:
    app: kingdom-studios-backend
    service: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
    - port: 443
      targetPort: 3000
      protocol: TCP
      name: https
  selector:
    app: kingdom-studios-backend
  sessionAffinity: None

---
# ==============================================
# HEADLESS SERVICE FOR STATEFULSET (if needed)
# ==============================================

apiVersion: v1
kind: Service
metadata:
  name: kingdom-studios-backend-headless
  namespace: production
  labels:
    app: kingdom-studios-backend
    service: backend-headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: kingdom-studios-backend

---
# ==============================================
# EXTERNAL SERVICE FOR LOAD BALANCER
# ==============================================

apiVersion: v1
kind: Service
metadata:
  name: kingdom-studios-backend-external
  namespace: production
  labels:
    app: kingdom-studios-backend
    service: backend-external
  annotations:
    # AWS Load Balancer Annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:123456789012:certificate/kingdom-studios-cert"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"

    # GCP Load Balancer Annotations
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "kingdom-studios-backend-config"}'

    # Azure Load Balancer Annotations
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/health"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
    - port: 443
      targetPort: 3000
      protocol: TCP
      name: https
  selector:
    app: kingdom-studios-backend
  loadBalancerSourceRanges:
    - 0.0.0.0/0
  externalTrafficPolicy: Cluster

---
# ==============================================
# SERVICE MONITOR FOR PROMETHEUS
# ==============================================

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kingdom-studios-backend
  namespace: production
  labels:
    app: kingdom-studios-backend
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app: kingdom-studios-backend
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: pod
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: node
        - sourceLabels: [__meta_kubernetes_namespace]
          targetLabel: namespace
